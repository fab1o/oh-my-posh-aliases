# Package manager to use:
# example: yarn | npm run | pnpm | bun
Z_PACKAGE_MANAGER=npm run

# Command to run the project in development mode.
Z_RUN_DEV=npm start

# Folder path to my project.
# example: ~/Developer/my_project
Z_PROJECT_FOLDER=~/Developer/oh-my-posh-aliases

# Repository uri
# example: git@github.com:fab1o/oh-my-posh-aliases.git
Z_PROJECT_REPO=git@github.com:fab1o/oh-my-posh-aliases.git

# Name of the project (make it short/use abbreviation)
Z_PROJECT_SHORT_NAME=fabio

# script in the cloned project's package.json to run, if any, after cloning
# example: npm install (usually).
Z_SETUP_SCRIPT=npm install

# commands to run via eval, if any, after 'Z_SETUP_SCRIPT'
# example: cd /setup && sh setup && echo 'done'
# PWD is the path of the cloned project in which the folder path is given by you.
Z_SETUP_COMMAND=

# a bash script path to run, if any and if file exists, after 'Z_PROJECT_SETUP_SCRIPT'
# example: ./some_script.sh
# PWD is the same as above.
Z_SETUP_BASH_SCRIPT_PATH=

# pull request template.
# example: '.github/pull_request_template.md'
Z_PULL_REQUEST_TEMPLATE=.github/pull_request_template.md

# text to be matched in the PR template, used in the 'pr' function.
Z_PR_REPLACE=Description:

# 1 to append commit messages to 'Z_PR_REPLACE' or 0 to replace 'Z_PR_REPLACE' with commit messages.
# example: 1 (false) or 0 (true)
Z_PR_APPEND=1

# 1 to run test before pushing code and creating a pr
# example: 1 (false) or 0 (true)
Z_PR_RUN_TEST=0
